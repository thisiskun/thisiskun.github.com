<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | This is Kun's Blog.]]></title>
  <link href="http://thisiskun.github.com/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://thisiskun.github.com/"/>
  <updated>2012-08-15T02:15:44+08:00</updated>
  <id>http://thisiskun.github.com/</id>
  <author>
    <name><![CDATA[Kun Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的vim]]></title>
    <link href="http://thisiskun.github.com/blog/2012/07/09/my-vim/"/>
    <updated>2012-07-09T16:50:00+08:00</updated>
    <id>http://thisiskun.github.com/blog/2012/07/09/my-vim</id>
    <content type="html"><![CDATA[<p>使用vim 也有一阵子了，感觉手感已经烧录进我的手指了，一旦拥有，很难回头去用其他的了。</p>

<p>下面是我的vim 的一些配置，你可以在github 上找到
<a href="https://github.com/thisiskun/dotvim">它</a>。</p>

<h2>同步备份vim配置</h2>

<p>vim 的配置文件默认是<code>～/.vim/</code> 以及<code>~/.vimrc</code> 和<code>~/.gvimrc</code>，github 在
建立一个repo， 不仅可以方便的同步备份，还可以跟别人分享你的配置。</p>

<h2>插件管理vundle</h2>

<p>感谢pathogen 和vundle 这样的插件，让vim 插件管理起来是如此的轻松。
经过对比，最后还是选用vundle，pathogen 采用的是git
submodule，总是没那么好用。
vundle 使用起来跟bundle
十分的相似，一个配置文件（vimrc），几个命令（<code>BundleInstall(!)</code>，<code>BundleClean(1)</code>）
就搞定。
vundle 可以从github，vim.org或者指定git repo上同步插件。
如果你使用github 管理<code>.vim</code> 目录，那记得在<code>.gitignore</code> 中加入</p>

<p><code>bash
bundle\
</code></p>

<h2>更好的snipmate</h2>

<p>snipmate 提供了很好的代码补全功能，scrooloose 提供了更好的
<a href="https://github.com/thisiskun/snipmate-snippets.git">snippets</a>。
fork 这个项目，然后加入vundle
的插件列表中，这样就可以方便的管理扩展这些snippets 了。
最后在vimrc 中设置snippets 的目录。</p>

<p><code>vim
let g:snippets_dir="~/.vim/bundle/snipmate-snippets/"
</code></p>

<h2>快速安装脚本</h2>

<p>虽然按照前面的设定，要在一台新机器上同步vim 配置很方便，
但是写一个脚本还是比Ctrl-c Ctrl-v 来的方便。</p>

<p><code>bash
git clone git@github.com:thisiskun/dotvim.git ~/.vim
</code></p>

<p>运行<code>setup.sh</code> 脚本：</p>

<p>```bash setup.sh</p>

<h1>!/bin/sh</h1>

<h1>setup rc files</h1>

<p>ln -s ~/.vim/vimrc ~/.vimrc
ln -s ~/.vim/gvimrc ~/.gvimrc</p>

<h1>back and undo directory</h1>

<p>mkdir ~/.vimbackup
mkdir ~/.vimundodir</p>

<h1>setup vundle</h1>

<p>git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
vim +BundleInstall +qa
```</p>

<hr />

<p>参考：</p>

<ul>
<li><p><a href="http://stevelosh.com/blog/2010/09/coming-home-to-vim/">coming home to vim</a></p></li>
<li><p><a href="http://vimcasts.org/">vimcasts.org</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ack, Better Than Grep]]></title>
    <link href="http://thisiskun.github.com/blog/2012/07/07/ack_better_than_grep/"/>
    <updated>2012-07-07T18:33:00+08:00</updated>
    <id>http://thisiskun.github.com/blog/2012/07/07/ack_better_than_grep</id>
    <content type="html"><![CDATA[<p>首先吐槽下ack 的域名，直接是<a href="http://betterthangrep.com">http://betterthangrep.com</a> ，
这让grep 情何以勘。。。</p>

<h2>什么是ack</h2>

<p>ack 是一个类似于grep 并为程序员专门优化过的字符串搜索工具。</p>

<h2>安装ack</h2>

<p>```bash</p>

<h1>for ubuntu</h1>

<p>sudo apt-get install ack-grep
```</p>

<p>因为已经有一个软件叫ack 了，所以可以：</p>

<p><code>bash
alias ack="ack-grep"
</code></p>

<h2>Why ack?</h2>

<ul>
<li><p>快速</p>

<p>ack 只搜索必需的文件。</p></li>
<li><p>更好的搜索</p>

<p>ack 默认忽略了SVN Git 以及其他版本控制系统的非源代码文件。</p></li>
<li><p>为源代码搜索而设计</p>

<p>不同于搜索文本的grep，ack 是专门搜索源代码的。</p></li>
<li><p>高度的可移植性</p>

<p>ack 是纯正的perl 脚本，可以在安装了perl 的windows 上运行。</p></li>
<li><p>免费开源</p></li>
</ul>


<h2>小技巧</h2>

<ul>
<li><p><code>--smart-case</code>，与vim的<code>smartcase</code> 类似，查找字符串全部小写着忽略大小写。</p></li>
<li><p><code>-a</code> 查找全部文件，因ack 为
为提高速度而忽略掉一些文件，所以有时有必要加上这个选项，
最常见的就是查找ruby 的某些文件，因为很多不能被识别为源代码文件。</p></li>
<li><p><code>-Q</code> 省去表达式中转义的麻烦。</p></li>
<li><p><code>--ruby</code> 只查找ruby 文件，类似的有<code>--perl</code>。</p></li>
<li><p><code>show-types</code> 显示文件类型。</p></li>
</ul>


<p>更多的可以<code>--help</code> 查看。</p>

<h2>ack.vim</h2>

<p>vim 插件，可以于github <a href="https://github.com/mileszs/ack.vim.git">下载</a>。</p>

<p>.vimrc 中加入</p>

<p><code>vim
let g:ackprg="ack-grep -H --nocolor --nogroup --column"
</code></p>

<p>我喜欢加入<code>--smart-case</code>。</p>

<p>之后在vim 中可以用Ack 等几个命令查找，结果会显示在quickfix list 中，
非常方便。</p>
]]></content>
  </entry>
  
</feed>
