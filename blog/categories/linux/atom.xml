<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | This is Kun's Blog.]]></title>
  <link href="http://thisiskun.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://thisiskun.github.com/"/>
  <updated>2012-08-15T10:04:53+08:00</updated>
  <id>http://thisiskun.github.com/</id>
  <author>
    <name><![CDATA[Kun Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的vim]]></title>
    <link href="http://thisiskun.github.com/blog/2012/07/09/my-vim/"/>
    <updated>2012-07-09T16:50:00+08:00</updated>
    <id>http://thisiskun.github.com/blog/2012/07/09/my-vim</id>
    <content type="html"><![CDATA[<p>使用vim 也有一阵子了，感觉手感已经烧录进我的手指了，一旦拥有，很难回头去用其他的了。</p>

<p>下面是我的vim 的一些配置，你可以在github 上找到
<a href="https://github.com/thisiskun/dotvim">它</a>。</p>

<h2>同步备份vim配置</h2>

<p>vim 的配置文件默认是<code>～/.vim/</code> 以及<code>~/.vimrc</code> 和<code>~/.gvimrc</code>，github 在
建立一个repo， 不仅可以方便的同步备份，还可以跟别人分享你的配置。</p>

<h2>插件管理vundle</h2>

<p>感谢pathogen 和vundle 这样的插件，让vim 插件管理起来是如此的轻松。
经过对比，最后还是选用vundle，pathogen 采用的是git
submodule，总是没那么好用。
vundle 使用起来跟bundle
十分的相似，一个配置文件（vimrc），几个命令（<code>BundleInstall(!)</code>，<code>BundleClean(1)</code>）
就搞定。
vundle 可以从github，vim.org或者指定git repo上同步插件。
如果你使用github 管理<code>.vim</code> 目录，那记得在<code>.gitignore</code> 中加入</p>

<p><code>bash
bundle\
</code></p>

<h2>更好的snipmate</h2>

<p>snipmate 提供了很好的代码补全功能，scrooloose 提供了更好的
<a href="https://github.com/thisiskun/snipmate-snippets.git">snippets</a>。
fork 这个项目，然后加入vundle
的插件列表中，这样就可以方便的管理扩展这些snippets 了。
最后在vimrc 中设置snippets 的目录。</p>

<p><code>vim
let g:snippets_dir="~/.vim/bundle/snipmate-snippets/"
</code></p>

<h2>快速安装脚本</h2>

<p>虽然按照前面的设定，要在一台新机器上同步vim 配置很方便，
但是写一个脚本还是比Ctrl-c Ctrl-v 来的方便。</p>

<p><code>bash
git clone git@github.com:thisiskun/dotvim.git ~/.vim
</code></p>

<p>运行<code>setup.sh</code> 脚本：</p>

<p>```bash setup.sh</p>

<h1>!/bin/sh</h1>

<h1>setup rc files</h1>

<p>ln -s ~/.vim/vimrc ~/.vimrc
ln -s ~/.vim/gvimrc ~/.gvimrc</p>

<h1>back and undo directory</h1>

<p>mkdir ~/.vimbackup
mkdir ~/.vimundodir</p>

<h1>setup vundle</h1>

<p>git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
vim +BundleInstall +qa
```</p>

<hr />

<p>参考：</p>

<ul>
<li><p><a href="http://stevelosh.com/blog/2010/09/coming-home-to-vim/">coming home to vim</a></p></li>
<li><p><a href="http://vimcasts.org/">vimcasts.org</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ack, Better Than Grep]]></title>
    <link href="http://thisiskun.github.com/blog/2012/07/07/ack_better_than_grep/"/>
    <updated>2012-07-07T18:33:00+08:00</updated>
    <id>http://thisiskun.github.com/blog/2012/07/07/ack_better_than_grep</id>
    <content type="html"><![CDATA[<p>首先吐槽下ack 的域名，直接是<a href="http://betterthangrep.com">http://betterthangrep.com</a> ，
这让grep 情何以勘。。。</p>

<h2>什么是ack</h2>

<p>ack 是一个类似于grep 并为程序员专门优化过的字符串搜索工具。</p>

<h2>安装ack</h2>

<p>```bash</p>

<h1>for ubuntu</h1>

<p>sudo apt-get install ack-grep
```</p>

<p>因为已经有一个软件叫ack 了，所以可以：</p>

<p><code>bash
alias ack="ack-grep"
</code></p>

<h2>Why ack?</h2>

<ul>
<li><p>快速</p>

<p>ack 只搜索必需的文件。</p></li>
<li><p>更好的搜索</p>

<p>ack 默认忽略了SVN Git 以及其他版本控制系统的非源代码文件。</p></li>
<li><p>为源代码搜索而设计</p>

<p>不同于搜索文本的grep，ack 是专门搜索源代码的。</p></li>
<li><p>高度的可移植性</p>

<p>ack 是纯正的perl 脚本，可以在安装了perl 的windows 上运行。</p></li>
<li><p>免费开源</p></li>
</ul>


<h2>小技巧</h2>

<ul>
<li><p><code>--smart-case</code>，与vim的<code>smartcase</code> 类似，查找字符串全部小写着忽略大小写。</p></li>
<li><p><code>-a</code> 查找全部文件，因ack 为
为提高速度而忽略掉一些文件，所以有时有必要加上这个选项，
最常见的就是查找ruby 的某些文件，因为很多不能被识别为源代码文件。</p></li>
<li><p><code>-Q</code> 省去表达式中转义的麻烦。</p></li>
<li><p><code>--ruby</code> 只查找ruby 文件，类似的有<code>--perl</code>。</p></li>
<li><p><code>show-types</code> 显示文件类型。</p></li>
</ul>


<p>更多的可以<code>--help</code> 查看。</p>

<h2>ack.vim</h2>

<p>vim 插件，可以于github <a href="https://github.com/mileszs/ack.vim.git">下载</a>。</p>

<p>.vimrc 中加入</p>

<p><code>vim
let g:ackprg="ack-grep -H --nocolor --nogroup --column"
</code></p>

<p>我喜欢加入<code>--smart-case</code>。</p>

<p>之后在vim 中可以用Ack 等几个命令查找，结果会显示在quickfix list 中，
非常方便。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux折腾记]]></title>
    <link href="http://thisiskun.github.com/blog/2012/05/09/zheteng-linux/"/>
    <updated>2012-05-09T11:35:00+08:00</updated>
    <id>http://thisiskun.github.com/blog/2012/05/09/zheteng-linux</id>
    <content type="html"><![CDATA[<p>工欲善其事，必先利其器，想成为一个更好的code，开发环境当然是linux 了
（mac 没用过，穷逼买不起）。
趁着ubuntu 12.04发布之际，赶紧装上体验一把。
以下是折腾过程的记录，流水帐。</p>

<h2>安装ubuntu</h2>

<p>新硬盘一颗，刻碟，装上。
没有装windows 双系统，为什么呢？我会告诉你我很懒吗？</p>

<p>默认是gnome 桌面系统，还有unity，用起来感觉就是，别扭。
所以就安装了kde 桌面，</p>

<h2>安装kde</h2>

<p><code>bash
sudo apt-get install kubuntu-desktop
</code></p>

<p>这也是我第一次接触kde 桌面，一开始感觉开机慢了，还不太习惯，而且由于双显卡驱动没装好，
特效开启不了，感觉很不爽啊。</p>

<h2>正确安装双显卡驱动</h2>

<p>我用的笔记本是hp 的dv3-4042tx，外观山寨苹果，不过工业设计吗，很多不合理的地方。
usb 接口只有两个，都在右边，而且靠的非常近。
另外要说的就是触摸板，一体化的触摸板，两个按键跟触摸区域无缝相连的，触摸区域大了没错，
不错按键手感就非常糟糕，还经常出现按键失灵的情况。</p>

<p><code>bash
lspci | grep VGA
</code></p>

<p><code>bash
00:02.0 VGA compatible controller: Intel Corporation Core Processor Integrated Graphics Controller (rev 02)
01:00.0 VGA compatible controller: Advanced Micro Devices [AMD] nee ATI Manhattan [Mobility Radeon HD 5400 Series] (rev ff)
</code></p>

<p>可以看到是intel 的集成显卡和ati独立显卡，装好了系统之后显示效果就一直不好，特效什么的也开不了，
所以就google 怎么正确的安装驱动，参考了这篇帖子。  <br/>
<a href="http://forum.ubuntu.com.cn/viewtopic.php?f=42&amp;t=350772">http://forum.ubuntu.com.cn/viewtopic.php?f=42&amp;t=350772</a></p>

<p>按照该帖的指导，并没有成功安装ati的闭源驱动，开机无法启动图形界面了，无奈只好卸载重启。
没想到重新开机，特效什么的全都出来了！柳暗花明又一村，有木有！</p>

<p>现在猜想，可能是</p>

<p><code>bash
sudo sh /usr/share/ati/fglrx-uninstall.sh
sudo apt-get remove --purge fglrx fglrx_* fglrx-amdcccle* fglrx-dev*
</code></p>

<p>这里把ubuntu 安装的驱动给卸载了，所以就没有安装ati 显卡的驱动了，
而intel 的显卡则正常工作，特效什么的毫无压力，所以就正常了。</p>

<h2>关闭独立显卡</h2>

<p>现在集成显卡正常工作了，但是两块显卡其实都是通电的，温度有点高，而且不节能环保啊。
参照这里搞定。     <br/>
<a href="http://linuxtoy.org/archives/how-to-use-vga-switcheroo-disable-video-card-linux-kms.html">http://linuxtoy.org/archives/how-to-use-vga-switcheroo-disable-video-card-linux-kms.html</a></p>

<p><code>bash
cat /sys/kernel/debug/vgaswitcheroo/switch
</code>
输出大致如下：</p>

<p>``` bash</p>

<pre><code>0:IGD:+:Pwr:0000:00:02.0
1:DIS: :Pwr:0000:01:00.0
</code></pre>

<p>```</p>

<p>两个都是Pwr。</p>

<p>编辑/etc/rc.local：</p>

<p><code>bash
chown yourname /sys/kernel/debug/vgaswitcheroo/switch
echo ON &gt; /sys/kernel/debug/vgaswitcheroo/switch
echo IGD &gt; /sys/kernel/debug/vgaswitcheroo/switch
echo OFF &gt; /sys/kernel/debug/vgaswitcheroo/switch
exit 0
</code></p>

<p>ok,重启，可以看到独立显卡一项是Off 的了。</p>

<h2>设置fcitx</h2>

<p>输入法使用的是fcitx，发现在konsole 和rekonq 下无法激活，
搜索了下，发现网上很多问这问题的，后来在官方wiki 上找到解决方法。</p>

<p><code>bash
sudo apt-get install qt4-qtconfig
sudo qtconfig
</code></p>

<p>运行qtconfig (名称可能根据你的发行版有所不同)，选择第三个标签，确认fcitx 是在默认输入法组合框中中。</p>

<h2>oh-my-zsh</h2>

<p>这个Ryan Bates 大神在railcasts 上介绍过了，默认配置就很好用了，
有特殊需求可以进一步折腾。</p>

<h2>ruby &amp; rails</h2>

<p>速配参考ruby-china 的<a href="http://ruby-china.org/wiki/install_ruby_guide">wiki 文档</a>，
ruby当然是用rvm来装了，如果报<code>rvm is not a funciotn</code>，
把终端改为login-shell，并确保正确加载<code>~/,bash_profile</code>和<code>~/.bashrc</code>
另外</p>

<p><code>bash
sudo apt-get install libsqlite3-dev
sudo apt-get install nodejs
</code></p>

<p>可以让你的第一个rails demo 跑起来。</p>

<h2>git &amp; github</h2>

<p><code>bash
git config --global user,name yourname
git config --global user.email youremail
git config --global core.editor vi
</code></p>

<p><code>bash
ssh-keygen -t rsa -C "your_email@youremail.com"
</code></p>

<p>然后将生成的ssh 公钥传到github 就好了。</p>

<h2>vim</h2>

<p><code>bash
cd ~
git clone git@github.com:thisiskun/dotvim.git ~/.vim
ln -s ~/.vim/vimrc ~/.vimrc
ln -s ~/.vim/gvimrc ~/.gvimrc
mkdir ~/.vimbackup
mkdir ~/.vimundodir
cd ~/.vim
git submodule init
git submodule update
</code>
不fork 一下吗？</p>

<h2>好软件</h2>

<ul>
<li><strong>Guake</strong> 快捷下拉终端，超级方便啊</li>
<li><strong>krunner</strong> alt-f2调出，感觉跟window的win+r差不多，这个软件很低调，找半天才找到名字</li>
<li><strong>amaorok</strong> 音乐播放软件，用户体验很赞，logo超帅，不过貌似中文支持不太好</li>
<li><strong>dolphin</strong> 文件管理软件</li>
<li><strong>konsole</strong> 终端，多套配置可选，方便添加书签</li>
<li><strong>firefox</strong> 这个说来话长</li>
</ul>


<h2>the end</h2>

<p>终于把linux 桌面环境配置的比较顺手了，折腾就是一个这样的过程：
每当你想，没辙了，其实，再转个弯就到了。
总体感觉，kde 桌面非常棒，完爆gonme。
之前有装过archlinux，感觉在知其所以然的情况下，用archlinux 应该会更好更方便，
配置简洁明了，滚动升级非常诱人，不过更适合熟手来折腾。
好了，折腾了那么多，是时候静下心来，干点正事了。</p>
]]></content>
  </entry>
  
</feed>
